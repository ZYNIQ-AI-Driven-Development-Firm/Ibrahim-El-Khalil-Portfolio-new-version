name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  FRONTEND_SERVICE: portfolio-frontend
  BACKEND_SERVICE: portfolio-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker

      - name: Build and Push Backend Image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA \
            -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:latest \
            -f backend/Dockerfile ./backend
          docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:latest

      - name: Deploy Backend to Cloud Run
        run: |
          gcloud run deploy $BACKEND_SERVICE \
            --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --set-env-vars MONGO_URL=${{ secrets.MONGO_URL }},DATABASE_NAME=portfolio_db,GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},PYTHONUNBUFFERED=1

      - name: Get Backend URL
        id: backend-url
        run: |
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE --region $REGION --format 'value(status.url)')
          echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT

      - name: Build and Push Frontend Image with Backend URL
        run: |
          docker build -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA \
            -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:latest \
            --build-arg GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
            --build-arg REACT_APP_BACKEND_URL=${{ steps.backend-url.outputs.url }} \
            -f frontend/Dockerfile ./frontend
          docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA
          docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:latest

      - name: Deploy Frontend to Cloud Run
        run: |
          gcloud run deploy $FRONTEND_SERVICE \
            --image gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --port 80 \
            --timeout 300

      - name: Get Frontend URL
        run: |
          FRONTEND_URL=$(gcloud run services describe $FRONTEND_SERVICE --region $REGION --format 'value(status.url)')
          echo "✅ Frontend deployed at: $FRONTEND_URL"
          echo "✅ Backend deployed at: ${{ steps.backend-url.outputs.url }}"

      - name: Map Custom Domain (Optional)
        run: |
          # Uncomment after domain verification
          # gcloud run domain-mappings create --service $FRONTEND_SERVICE --domain khalilpreview.space --region $REGION
          echo "Remember to map your domain manually or uncomment the command above"
