# Google Cloud Build configuration with MongoDB deployment
# This deploys MongoDB, Backend, and Frontend together

steps:
  # Build MongoDB Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-mongodb'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-mongodb:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-mongodb:latest'
      - '-f'
      - 'Dockerfile.mongodb'
      - '.'

  # Build Backend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-backend:latest'
      - '-f'
      - 'backend/Dockerfile'
      - './backend'

  # Build Frontend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-frontend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/portfolio-frontend:latest'
      - '--build-arg'
      - 'GEMINI_API_KEY=${_GEMINI_API_KEY}'
      - '-f'
      - 'frontend/Dockerfile'
      - './frontend'

  # Push MongoDB Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-mongodb'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/portfolio-mongodb:$COMMIT_SHA'
    waitFor: ['build-mongodb']

  # Push Backend Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/portfolio-backend:$COMMIT_SHA'
    waitFor: ['build-backend']

  # Push Frontend Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/portfolio-frontend:$COMMIT_SHA'
    waitFor: ['build-frontend']

  # Deploy MongoDB to Cloud Run (with persistent volume)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-mongodb'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'portfolio-mongodb'
      - '--image'
      - 'gcr.io/$PROJECT_ID/portfolio-mongodb:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--no-allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '1'
      - '--min-instances'
      - '1'
      - '--port'
      - '27017'
      - '--set-env-vars'
      - 'MONGO_INITDB_ROOT_USERNAME=${_MONGO_USERNAME},MONGO_INITDB_ROOT_PASSWORD=${_MONGO_PASSWORD},MONGO_INITDB_DATABASE=${_DATABASE_NAME}'
    waitFor: ['push-mongodb']

  # Get MongoDB URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-mongodb-url'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Getting MongoDB service URL..."
        MONGO_HOST=$(gcloud run services describe portfolio-mongodb --region ${_REGION} --format 'value(status.url)' | sed 's|https://||')
        echo "MONGO_HOST=$MONGO_HOST" > /workspace/mongo_url.txt
        echo "MongoDB URL: mongodb://${_MONGO_USERNAME}:${_MONGO_PASSWORD}@$MONGO_HOST:27017/${_DATABASE_NAME}?authSource=admin"
    waitFor: ['deploy-mongodb']

  # Deploy Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    entrypoint: bash
    args:
      - '-c'
      - |
        MONGO_HOST=$(cat /workspace/mongo_url.txt | grep MONGO_HOST | cut -d'=' -f2)
        MONGO_URL="mongodb://${_MONGO_USERNAME}:${_MONGO_PASSWORD}@$MONGO_HOST:27017/${_DATABASE_NAME}?authSource=admin"
        
        gcloud run deploy portfolio-backend \
          --image gcr.io/$PROJECT_ID/portfolio-backend:$COMMIT_SHA \
          --region ${_REGION} \
          --platform managed \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 10 \
          --set-env-vars "MONGO_URL=$MONGO_URL,DATABASE_NAME=${_DATABASE_NAME},PYTHONUNBUFFERED=1"
    waitFor: ['push-backend', 'get-mongodb-url']

  # Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    entrypoint: bash
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe portfolio-backend --region ${_REGION} --format 'value(status.url)')
        
        gcloud run deploy portfolio-frontend \
          --image gcr.io/$PROJECT_ID/portfolio-frontend:$COMMIT_SHA \
          --region ${_REGION} \
          --platform managed \
          --allow-unauthenticated \
          --memory 256Mi \
          --cpu 1 \
          --max-instances 10 \
          --port 80 \
          --set-env-vars "REACT_APP_API_URL=$BACKEND_URL/api,REACT_APP_BACKEND_URL=$BACKEND_URL,REACT_APP_GEMINI_API_KEY=${_GEMINI_API_KEY}"
    waitFor: ['push-frontend', 'deploy-backend']

timeout: '2400s'

substitutions:
  _REGION: 'us-central1'
  _GEMINI_API_KEY: ''
  _MONGO_USERNAME: 'admin'
  _MONGO_PASSWORD: 'portfolioPassword123'
  _DATABASE_NAME: 'portfolio_db'

images:
  - 'gcr.io/$PROJECT_ID/portfolio-mongodb:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/portfolio-mongodb:latest'
  - 'gcr.io/$PROJECT_ID/portfolio-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/portfolio-frontend:latest'
  - 'gcr.io/$PROJECT_ID/portfolio-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/portfolio-backend:latest'

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
